{"version":3,"sources":["types/SortType.ts","App.tsx","index.tsx"],"names":["SortType","goodsFromServer","GoodList","goods","map","good","App","useState","Default","sortType","setSortType","reverseField","setReverseField","preparedGoods","sort","good1","good2","Alphabet","localeCompare","Length","length","reverse","getPreparedGoods","className","type","onClick","cn","ReactDOM","render","document","getElementById"],"mappings":"6KAAYA,E,+EAAAA,K,WAAAA,E,oBAAAA,E,iBAAAA,M,gBCOCC,EAA4B,CACvC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAuCK,IAAMC,EAA4B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACvC,6BACGA,EAAMC,KAAI,SAAAC,GAAI,OACb,oBACE,UAAQ,OADV,SAIGA,GAFIA,SAQAC,EAAgB,WAC3B,MAAgCC,mBAASP,EAASQ,SAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAwCH,oBAAS,GAAjD,mBAAOI,EAAP,KAAqBC,EAArB,KACMT,EApDR,SACEA,EACAM,EACAE,GAEA,IAAME,EAAa,YAAOV,GAwB1B,OAtBIM,GACFI,EAAcC,MAAK,SAACC,EAAOC,GACzB,OAAQP,GACN,KAAKT,EAASiB,SACZ,OAAOF,EAAMG,cAAcF,GAG7B,KAAKhB,EAASmB,OACZ,OAAOJ,EAAMK,OAASJ,EAAMI,OAG9B,QACE,OAAO,MAMXT,GACFE,EAAcQ,UAGTR,EAuBOS,CAAiBrB,EAAiBQ,EAAUE,GAE1D,OACE,sBAAKY,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLC,QAAS,kBAAMf,EAAYV,EAASiB,WACpCM,UAAWG,IAAG,SAAU,UACtB,CACE,WAAYjB,IAAaT,EAASiB,WALxC,iCAWA,wBACEO,KAAK,SACLC,QAAS,kBAAMf,EAAYV,EAASmB,SACpCI,UAAWG,IAAG,SAAU,UACtB,CACE,WAAYjB,IAAaT,EAASmB,SALxC,4BAWA,wBACEK,KAAK,SACLC,QAAS,kBAAMb,GAAiBD,IAChCY,UAAWG,IAAG,SAAU,UACtB,CACE,YAAaf,IALnB,sBAWEF,GAAYE,IACZ,wBACEa,KAAK,SACLC,QAAS,WACPf,EAAYV,EAASQ,SACrBI,GAAgB,IAElBW,UAAU,4BANZ,sBAaJ,cAAC,EAAD,CAAUpB,MAAOA,QCzHvBwB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.dba3b9a4.chunk.js","sourcesContent":["export enum SortType {\n  Default = '',\n  Alphabet = 'alphabet',\n  Length = 'length',\n}\n","import 'bulma/css/bulma.css';\nimport cn from 'classnames';\nimport './App.scss';\nimport React, { useState } from 'react';\n\nimport { SortType } from './types/SortType';\n\nexport const goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nfunction getPreparedGoods(\n  goods: string[],\n  sortType: SortType,\n  reverseField: boolean,\n): string[] {\n  const preparedGoods = [...goods];\n\n  if (sortType) {\n    preparedGoods.sort((good1, good2) => {\n      switch (sortType) {\n        case SortType.Alphabet: {\n          return good1.localeCompare(good2);\n        }\n\n        case SortType.Length: {\n          return good1.length - good2.length;\n        }\n\n        default: {\n          return 0;\n        }\n      }\n    });\n  }\n\n  if (reverseField) {\n    preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n}\n\ntype Props = {\n  goods: string[];\n};\n\nexport const GoodList: React.FC<Props> = ({ goods }) => (\n  <ul>\n    {goods.map(good => (\n      <li\n        data-cy=\"Good\"\n        key={good}\n      >\n        {good}\n      </li>\n    ))}\n  </ul>\n);\n\nexport const App: React.FC = () => {\n  const [sortType, setSortType] = useState(SortType.Default);\n  const [reverseField, setReverseField] = useState(false);\n  const goods = getPreparedGoods(goodsFromServer, sortType, reverseField);\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          onClick={() => setSortType(SortType.Alphabet)}\n          className={cn('button', 'is-info',\n            {\n              'is-light': sortType !== SortType.Alphabet,\n            })}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={() => setSortType(SortType.Length)}\n          className={cn('button', 'is-info',\n            {\n              'is-light': sortType !== SortType.Length,\n            })}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={() => setReverseField(!reverseField)}\n          className={cn('button', 'is-info',\n            {\n              'is-light': !reverseField,\n            })}\n        >\n          Reverse\n        </button>\n\n        {(sortType || reverseField) && (\n          <button\n            type=\"button\"\n            onClick={() => {\n              setSortType(SortType.Default);\n              setReverseField(false);\n            }}\n            className=\"button is-danger is-light\"\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <GoodList goods={goods} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}